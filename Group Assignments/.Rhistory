library(readxl)
library(tidyverse)
data=read_xlsx("D:/Mario Documents/UNC/STOR 320/Not for Github Yet/SP2020_ATTENDANCE/STOR_320_002_SIGN.xlsx")
victim=sample(x=as.vector(data$`Student Name`),size=1)
print(victim)
library(tidyverse)
library(readxl)
#Read Rosters
Section2=read_excel("STOR320_002_Roster.xlsx")
#Read Rosters
Section2=read_excel("STOR320_002_ROSTER.xlsx")
read_excel("STOR320_002_ROSTER.xlsx")
library(tidyverse)
library(readxl)
#Read Rosters
Section2=read_excel("STOR320_002_ROSTER.xlsx")
#Read Rosters
Section2=read_excel("STOR320_002_ROSTER.xlsx")
library(tidyverse)
library(readxl)
#Read Rosters
Section2=read_excel("STOR320_002_ROSTER.xlsx")
#Read Rosters
Section2=read_excel("/STOR320_002_ROSTER.xlsx")
#Read Rosters
Section2=read_excel("~/STOR320_002_ROSTER.xlsx")
#Read Rosters
Section2=read_excel("D:/Mario Documents/UNC/STOR 320/STOR320_WEBSITE/Group Assignments/STOR320_002_ROSTER.xlsx")
View(Section2)
Group.select.func<-function(data){
student.names=data$Name
set.seed(length(student.names))
random.order=sample(1:length(student.names),replace=F)
group=tibble(Order=random.order,Name=student.names) %>%
arrange(Order) %>%
mutate(Group=rep(1:(length(student.names)%/%5+(length(student.names)%%5!=0)),
each=5,length=length(student.names))) %>%
mutate(Role="TBD") %>%
select(-Order) %>%
arrange(Group)
return(group)
}
#Application of the Function
Final.Section.2=Group.select.func(Section2)
#Save Datasets
write_csv(Final.Section.2,path=str_c(getwd(),"/STOR_320_002_Group_Assignments.csv"))
getwd()
setwd("D:/Mario Documents/UNC/STOR 320/STOR320_WEBSITE")
setwd("D:/Mario Documents/UNC/STOR 320/STOR320_WEBSITE/Group Assignments")
library(tidyverse)
library(readxl)
#Read Rosters
Section2=read_excel("STOR320_002_ROSTER.xlsx")
#Function to Divide Sections into Groups
Group.select.func<-function(data){
student.names=data$Name
set.seed(length(student.names))
random.order=sample(1:length(student.names),replace=F)
group=tibble(Order=random.order,Name=student.names) %>%
arrange(Order) %>%
mutate(Group=rep(1:(length(student.names)%/%5+(length(student.names)%%5!=0)),
each=5,length=length(student.names))) %>%
mutate(Role="TBD") %>%
select(-Order) %>%
arrange(Group)
return(group)
}
#Application of the Function
Final.Section.2=Group.select.func(Section2)
View(Final.Section.2)
View(Final.Section.2)
sample(1:length(student.names),replace=F)
data=Section2
student.names=data$Name
student.names
set.seed(length(student.names))
random.order=sample(1:length(student.names),replace=F)
random.order
length(student.names)%%5
5-set.seed(length(student.names))
5-length(student.names)%%5
Group.select.func(Section2)
View(Group.select.func)
Final.Section.2
View(Final.Section.2)
Final.Section.2[105,]
Final.Section.2[105,"Group"]
View(Final.Section.2)
Final.Section.2=Group.select.func(Section2)
Final.Section.2[105,"Group"]==22
Final.Section.2[100,"Group"]==22
Final.Section.2[95,"Group"]==22
Final.Section.2=Group.select.func(Section2)
Final.Section.2[105,"Group"]=22
Final.Section.2[100,"Group"]=22
Final.Section.2[95,"Group"]=22
#Save Datasets
write_csv(Final.Section.2,path=str_c(getwd(),"/STOR_320_002_Group_Assignments.csv"))
arrange(Final.Section.2,Group)
#Save Datasets
write_csv(Final.Section.2,path=str_c(getwd(),"/STOR_320_002_Group_Assignments.csv"))
#Save Datasets
write_csv(Final.Section.2,path=str_c(getwd(),"/STOR_320_002_Group_Assignments.csv"))
Group
Final.Section.2
arrange(Final.Section.2,Group)
View(Final.Section.2)
Final.Section.2=arrange(Final.Section.2,Group)
#Save Datasets
write_csv(Final.Section.2,path=str_c(getwd(),"/STOR_320_002_Group_Assignments.csv"))
View(Final.Section.2)

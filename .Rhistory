str(CHOL1b)
CHOL2a = CHOL2 %>%
spread(key=Statistic,value=Value)
print(CHOL2a)
CHOL.COMBINED = left_join(CHOL1b,CHOL2a,by=c("Margarine"="Brand"))
head(CHOL.COMBINED)
VIOLENT2 = inner_join(VIOLENT,S_VS_D,by=c("State"="STATE"))
str(VIOLENT2)
View(S_VS_D)
View(STATE_ABBREV)
FINAL.VIOLENT = left_join(VIOLENT3,STATE_ABBREV)
VIOLENT3 = left_join(VIOLENT2,CENSUS,by=c("State"="State","City"="Name"))
head(VIOLENT3)
FINAL.VIOLENT = left_join(VIOLENT3,STATE_ABBREV)
View(FINAL.VIOLENT)
FINAL.VIOLENT = left_join(left_join(VIOLENT3,STATE_ABBREV),ZIP,by=c("City"="city","state"="state"))
View(FINAL.VIOLENT)
View(ZIP)
filter(ZIP,STATE=MO)
filter(ZIP,STATE=="MO")
filter(ZIP,state=="MO")
check=filter(ZIP,state=="MO")
View(check)
View(FINAL.VIOLENT)
View(FINAL.VIOLENT)
FINAL.VIOLENT = left_join(left_join(VIOLENT3,STATE_ABBREV),ZIP,by=c("City"="city","state"="state")) %>%
select(-state)
View(FINAL.VIOLENT)
FINAL.VIOLENT = left_join(left_join(VIOLENT3,STATE_ABBREV),ZIP,by=c("City"="city","state"="state")) %>%
select(-state)
str(FINAL.VIOLENT)
View(VIOLENT3)
View(FINAL.VIOLENT)
filter(FINAL.VIOLENT,is.na(lat))
filter(ZIP,city="Saint Louis")
filter(ZIP,city=="Saint Louis")
filter(ZIP,city=="Saint Paul")
filter(ZIP,city=="Saint Petersburg")
View(STATE_ABBREV)
knitr::opts_chunk$set(echo = TRUE,warning=F)
options(scipen=999)
library(tidyverse)    #Essential Functions
library(forcats)
eye.colors=c("Brown","Hazel","Blue","Green","Amber")
set.seed(320)
eye.sample=tibble(eye=sample(eye.colors,size=50,
prob=c(0.55,0.05,0.08,0.02,0.05),replace=T))
ggplot(data=eye.sample) +
geom_bar(aes(x=eye),fill="lightskyblue1") +
xlab("Eye Color") + ylab("Count") +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE,warning=F)
options(scipen=999)
library(tidyverse)    #Essential Functions
library(forcats)
eye.colors=c("Brown","Hazel","Blue","Green","Amber")
set.seed(320)
eye.sample=tibble(eye=sample(eye.colors,size=50,
prob=c(0.55,0.05,0.08,0.02,0.05),replace=T))
ggplot(data=eye.sample) +
geom_bar(aes(x=eye),fill="lightskyblue1") +
xlab("Eye Color") + ylab("Count") +
theme_minimal()
eye.sample=tibble(eye=factor(sample(eye.colors,size=50,
prob=c(0.55,0.05,0.08,0.02,0.05),replace=T))
ggplot(data=eye.sample) +
set.seed(320)
eye.sample2=tibble(eye=factor(sample(eye.colors,levels=eye.colors),size=50,
prob=c(0.55,0.05,0.08,0.02,0.05),replace=T))
set.seed(320)
eye.sample2=tibble(eye=factor(sample(eye.colors,levels=eye.colors,size=50,
prob=c(0.55,0.05,0.08,0.02,0.05)),replace=T))
set.seed(320)
eye.sample2=tibble(eye=factor(sample(eye.colors,levels=eye.colors,size=50,
prob=c(0.55,0.05,0.08,0.02,0.05),replace=T)))
set.seed(320)
eye.sample2=tibble(eye=factor(sample(eye.colors,size=50,
prob=c(0.55,0.05,0.08,0.02,0.05),replace=T)),levels=eye.colors)
set.seed(320)
eye.sample2=tibble(eye=factor(sample(eye.colors,size=50,
prob=c(0.55,0.05,0.08,0.02,0.05),replace=T),levels=eye.colors))
ggplot(data=eye.sample2) +
geom_bar(aes(x=eye),fill="lightskyblue1") +
xlab("Eye Color") + ylab("Count") +
theme_minimal()
eye.sample2$eye
set.seed(320)
eye.sample2=tibble(eye=factor(sample(eye.colors,size=50,
prob=c(0.55,0.05,0.08,0.02,0.05),replace=T),levels=eye.colors))
ggplot(data=eye.sample2) +
geom_bar(aes(x=eye),fill="lightskyblue1") +
xlab("Eye Color") + ylab("Count") +
theme_minimal()
set.seed(320)
eye.sample2=tibble(eye=factor(sample(eye.colors,size=50,
prob=c(0.55,0.05,0.08,0.02,0.05),replace=T),levels=eye.colors))
ggplot(data=eye.sample2) +
geom_bar(aes(x=eye),fill="lightskyblue1") +
scale_x_discrete(drop=F)
xlab("Eye Color") + ylab("Count") +
theme_minimal()
eye.colors=c("Brown","Hazel","Blue","Green","Amber")
set.seed(320)
eye.sample=tibble(eye=sample(eye.colors,size=50,
prob=c(0.55,0.05,0.08,0.02,0.05),replace=T))
ggplot(data=eye.sample) +
geom_bar(aes(x=eye),fill="lightskyblue1") +
scale_x_discrete(drop=F)
xlab("Eye Color") + ylab("Count") +
theme_minimal()
set.seed(320)
eye.sample2=tibble(eye=factor(sample(eye.colors,size=50,
prob=c(0.55,0.05,0.08,0.02,0.05),replace=T),levels=eye.colors))
ggplot(data=eye.sample2) +
geom_bar(aes(x=eye),fill="lightskyblue1") +
scale_x_discrete(drop=F)
xlab("Eye Color") + ylab("Count") +
theme_minimal()
survey.levels=c("Magical","Alright","Regular","Inferior","Offensive")
survey.sample=tibble(result=sample(c("Magical","Alright","Regular","Inferior","Ofensive")))
survey.levels=c("Magical","Alright","Regular","Inferior","Offensive")
set.seed(80)
survey.sample=tibble(result=sample(c("Magical","Alright","Regular","Inferior","Ofensive"),size=80,
prob=c(0.1,0.4,0.2,0.1,0.2),replace=F))
tibble(result=sample(c("Magical","Alright","Regular","Inferior","Ofensive"),size=80,
prob=c(0.1,0.4,0.2,0.1,0.2),replace=F))
survey.levels=c("Magical","Alright","Regular","Inferior","Offensive")
set.seed(80)
survey.sample=tibble(result=sample(c("Magical","Alright","Regular","Inferior","Ofensive"),size=80,
prob=c(0.1,0.4,0.2,0.1,0.2),replace=T))
survey.levels=c("Magical","Alright","Regular","Inferior","Offensive")
set.seed(80)
survey.sample=tibble(result=sample(c("Magical","Alright","Regular","Inferior","Ofensive"),size=80,
prob=c(0.1,0.4,0.2,0.1,0.2),replace=T))
ggplot(data=survey.sample) +
geom_bar(aes(x=result),fill="lightskyblue1") +
scale_x_discrete(drop=F) +
xlab("Survey Result") + ylab("Count") +
theme_minimal()
survey.levels=c("Magical","Alright","Regular","Inferior","Offensive")
set.seed(80)
survey.sample=tibble(result=factor(sample(c("Magical","Alright","Regular","Inferior","Ofensive"),size=80,
prob=c(0.1,0.4,0.2,0.1,0.2),replace=T),levels=survey.levels))
ggplot(data=survey.sample) +
geom_bar(aes(x=result),fill="lightskyblue1") +
scale_x_discrete(drop=F) +
xlab("Survey Result") + ylab("Count") +
theme_minimal()
set.seed(80)
urbanicity.sample=tibble(result=sample(1:4,size=1000,
prob=c(0.5,0.3,0.18,0.02),replace=T))
ggplot(data=urbanicity.sample) +
geom_bar(aes(x=result),fill="lightskyblue1") +
scale_x_discrete(drop=F) +
xlab("Survey Result") + ylab("Count") +
theme_minimal()
set.seed(80)
urbanicity.sample=tibble(result=sample(1:4,size=1000,
prob=c(0.5,0.3,0.18,0.02),replace=T))
ggplot(data=urbanicity.sample) +
geom_bar(aes(x=result),fill="lightskyblue1") +
xlab("Survey Result") + ylab("Count") +
theme_minimal()
urbanicity=c("Metro","Burbs","Rural","Isolated")
set.seed(80)
urbanicity.sample=tibble(result=factor(1:4,size=80,
prob=c(0.5,0.3,0.18,0.02),replace=T),levels=1:4,labels=urbanicity))
urbanicity=c("Metro","Burbs","Rural","Isolated")
set.seed(80)
urbanicity.sample=tibble(result=factor(sample(1:4,size=1000,
prob=c(0.5,0.3,0.18,0.02),replace=T),levels=1:4,labels=urbanicity))
ggplot(data=urbanicity.sample) +
geom_bar(aes(x=result),fill="lightskyblue1") +
xlab("Survey Result") + ylab("Count") +
theme_minimal()
Social=gss_cat
names(Social)
Social=gss_cat
str(Social)
glimpse(Social)
Height.fct = as.factor(Height)
Height = c("Tall","Short","Tall",
"Tall","Short","Medium",
"Short","Medium","Tall")
Height.fct = as.factor(Height)
Height.fct
levels(Height.fct)
print(Height.fct)
print(Height)
levels(Height)
Height2.fct = as.factor(Height)
label(Height2.fct)
labels(Height2.fct)
Height2.fct = as.factor(Height)
Height2.fct
labels=levels(Height2.fct)
Height2.fct
labels(Height2.fct)
labels(Height.fct)
labels(Height2.fct)
labels(Height2.fct) = levels(Height2.fct)
labels(Height.fct)
labels(Height2.fct)
levels(Height2.fct)
labels(Height2.fct) = levels(Height2.fct)
Height2.fct = factor(Height,levels=c("Medium","Short","Tall"),labels=c("M","S","T"))
labels(Height.fct)
Height2.fct
Height
labels=c("M","S","T"
levels=c("Medium","Short","Tall")
Height2.fct = factor(Height,levels=c("Medium","Short","Tall"),labels=c("M","S","T"))
Height2.fct
sort(Height2.fct)
print(Height2.fct)
levels(Height2.fct)
print(Height2.fct)
Height2.fct = factor(Height,levels=c("Medium","Short","Tall"),labels=c("2","1","3"))
levels(Height2.fct)
print(Height2.fct)
labels(Height.fct)
Height2.fct = factor(Height,levels=c("Medium","Short","Tall"),labels=c("Short","Short","Not Short"))
levels(Height2.fct)
print(Height2.fct)
Height2.fct = factor(Height,levels=c("Medium","Short","Tall"),labels=c("Short","Short","Not Short"))
levels(Height2.fct)
print(Height2.fct)
Height2.fct = factor(Height,levels=c("Short","Medium","Tall"))
levels(Height2.fct)
print(Height2.fct)
levels(Height3.fct)
Height3.fct = factor(Height,levels=c("Short","Medium","Tall"),labels=c("S","M","T"))
levels(Height3.fct)
print(Height3.fct)
Height4.fct = factor(Height,levels=c("Short","Medium","Tall"),labels=c("Short","Not Short","Not Short"))
Height4.fct = factor(Height,levels=c("Short","Medium","Tall"),labels=c("Short","Not Short","Not Short"))
levels(Height3.fct)
print(Height3.fct)
Height3.fct = factor(Height,levels=c("Short","Medium","Tall"),labels=c("S","M","T"))
levels(Height3.fct)
print(Height3.fct)
Height4.fct = factor(Height,levels=c("Short","Medium","Tall"),labels=c("Short","Not Short","Not Short"))
levels(Height4.fct)
print(Height4.fct)
tibble(Height3.fct)
ggplot(data=tibble(Height3.fct)) +
geom_bar(aes(Height3.fct))
ggplot(data=tibble(Height3.fct)) +
geom_bar(aes(Height3.fct),color="lightskyblue1")
ggplot(data=tibble(Height3.fct)) +
geom_bar(aes(Height3.fct),fill="lightskyblue1")
ggplot(data=tibble(Height3.fct)) +
geom_bar(aes(Height3.fct),fill="lightskyblue1") +
theme_minimal()
ggplot(data=tibble(Height.fct)) +
geom_bar(aes(Height3.fct),fill="lightskyblue1") +
theme_minimal()
ggplot(data=tibble(Height.fct)) +
geom_bar(aes(Height.fct),fill="lightskyblue1") +
theme_minimal()
ggplot(data=tibble(Height2.fct)) +
geom_bar(aes(Height.fct),fill="lightskyblue1") +
theme_minimal()
ggplot(data=tibble(Height2.fct)) +
geom_bar(aes(Height2.fct),fill="lightskyblue1") +
theme_minimal()
View(Social)
race.summary
race.summary = Social %>%
group_by(race) %>%
summarize(
n=n(),
avg.age=mean(age,na.rm=T),
avg.tv=mean(tvhours,na.rm=T)
)
race.summary
race.summary$race
race.summary$race
race.summary
race.summary$race
race.summary
Social$race
levels(Social$race)
levels(race.summary$race)
race.summary = Social %>%
group_by(race) %>%
summarize(
n=n(),
avg.age=mean(age,na.rm=T),
avg.tv=mean(tvhours,na.rm=T)
)
race.summary
levels(Social$race)
levels(race.summary$race)
race.summary
ggplot(race.summary) +
geom_bar(aes(x=avg.age,y=race))
ggplot(race.summary) +
geom_point(aes(x=avg.age,y=race))
ggplot(race.summary) +
geom_point(aes(x=avg.tv,y=race)) +
theme_minimal()
ggplot(race.summary) +
geom_point(aes(x=avg.tv,y=race),size=2) +
theme_minimal()
ggplot(race.summary) +
geom_point(aes(x=avg.tv,y=race),size=4) +
theme_minimal()
ggplot(race.summary) +
geom_point(aes(x=avg.tv,y=fct_reorder(race,avg.tv)),size=4) +
xlab("") + ylab("") +
theme_minimal()
ggplot(Social) +
geom_boxplot(aes(x=avg.tv,y=fct_reorder(race,avg.tv)),size=4)
ggplot(Social) +
geom_boxplot(aes(x=avg.tv,y=fct_reorder(race,tvhours)),size=4) +
xlab("") + ylab("") +
theme_minimal()
ggplot(Social) +
geom_boxplot(aes(x=tvhours,y=fct_reorder(race,tvhours)),size=4) +
xlab("") + ylab("") +
theme_minimal()
ggplot(Social) +
geom_boxplot(aes(x=tvhours,y=fct_reorder(race,tvhours)),size=4) +
xlab("") + ylab("") +
theme_minimal()
ggplot(Social) +
geom_boxplot(aes(x=tvhours,y=fct_reorder(race,tvhours))) +
xlab("") + ylab("") +
theme_minimal()
ggplot(Social) +
geom_boxplot(aes(x=tvhours,y=fct_reorder(race,tvhours)))
ggplot(Social) +
geom_boxplot(aes(x=fct_reorder(race,tvhours),y=tvhours)) +
xlab("") + ylab("") +
theme_minimal()
ggplot(Social) +
geom_boxplot(aes(x=fct_reorder(race,tvhours,fun),y=tvhours)) +
xlab("") + ylab("") +
theme_minimal()
ggplot(Social) +
geom_boxplot(aes(x=fct_reorder(race,tvhours,fun=min),y=tvhours)) +
xlab("") + ylab("") +
theme_minimal()
ggplot(Social) +
geom_boxplot(aes(x=fct_reorder(race,tvhours,fun=max),y=tvhours)) +
xlab("") + ylab("") +
theme_minimal()
ggplot(Social) +
geom_boxplot(aes(x=fct_reorder(race,tvhours,fun=median),y=tvhours)) +
xlab("") + ylab("") +
theme_minimal()
ggplot(Social) +
geom_boxplot(aes(x=fct_reorder(race,tvhours,fun=median,na.rm=T),y=tvhours)) +
xlab("") + ylab("") +
theme_minimal()
ggplot(Social) +
geom_boxplot(aes(x=fct_reorder(race,tvhours,fun=mean,na.rm=T),y=tvhours)) +
xlab("") + ylab("") +
theme_minimal()
ggplot(Social) +
geom_boxplot(aes(x=fct_reorder(race,tvhours,fun=max,na.rm=T),y=tvhours)) +
xlab("") + ylab("") +
theme_minimal()
fct_reorder(race,tvhours,fun=max,na.rm=T)
ggplot(Social) +
geom_boxplot(aes(x=fct_reorder(race,tvhours,fun=mean,na.rm=T),y=tvhours)) +
xlab("") + ylab("") +
theme_minimal()
ggplot(race.summary) +
geom_point(aes(x=avg.tv,y=race),size=4) +
xlab("") + ylab("") +
theme_minimal()
ggplot(Social) +
geom_boxplot(aes(x=fct_reorder(race,tvhours),y=tvhours)) +
xlab("") + ylab("") +
theme_minimal()
ggplot(Social) +
geom_boxplot(aes(x=fct_reorder(race,tvhours,fun=median),y=tvhours)) +
xlab("") + ylab("") +
theme_minimal()
ggplot(Social) +
geom_boxplot(aes(x=fct_reorder(race,tvhours,fun=median,na.rm=T),y=tvhours)) +
xlab("") + ylab("") +
theme_minimal()
str(Social[,c("race","rincome")])
levels(Social$race)
levels(Social$rincome)
View(Social)
View(Social)
head(Social[,c("race","rincome")])
head(Social[,c("race","rincome")])
str(Social[,c("race","rincome")])
levels(Social$race)
levels(Social$rincome)
gss_cat %>%
mutate(marital = marital %>% fct_infreq() %>% fct_rev()) %>%
ggplot(aes(marital)) +
geom_bar()
gss_cat %>%
mutate(marital = marital %>% fct_infreq()) %>%
ggplot(aes(marital)) +
geom_bar()
fct_rev(Social$rincome)
ggplot(Social) +
geom_point(aes(x=rincome,y=tvhours))
ggplot(Social) +
geom_point(aes(y=rincome,x=tvhours))
ggplot(Social) +
geom_point(aes(x=tvhours,y=rincome))
ggplot(Social) +
geom_boxplot(aes(x=tvhours,y=rincome))
ggplot(Social) +
geom_boxplot(aes(x=rincome,y=tvhours))
ggplot(Social) +
geom_boxplot(aes(x=rincome,y=tvhours)) +
coord_flip()
ggplot(Social) +
geom_boxplot(aes(x=rincome,y=tvhours)) +
coord_flip() +
theme_minimal()
ggplot(Social) +
geom_boxplot(aes(x=fct_rev(rincome),y=tvhours)) +
coord_flip() +
theme_minimal()
ggplot(Social) +
geom_boxplot(aes(x=fct_rev(fct_relevel(rincome,"Not Applicable")),y=tvhours)) +
coord_flip() +
theme_minimal()
ggplot(Social) +
geom_boxplot(aes(x=fct_rev(fct_relevel(rincome,"Not applicable")),y=tvhours)) +
coord_flip() +
theme_minimal()
Marriage = Social %>%
group_by(marital)
Marriage = Social %>%
count(marital)
Marriage
Marriage = Social %>%
count(marital) %>%
mutate(prop=n/sum(n))
Marriage
Marriage = Social %>%
count(marital) %>%
mutate(prop=n/sum(n))
print(Marriage)
Marriage2 = Social %>%
mutate(marital2=fct_recode(marital,
"No Answer"="NA",
"Never Married" = "Single"
)) %>%
count(marital,marital2) %>%
mutate(prop=n/sum(n))
print(Marriage2)
Marriage2 = Social %>%
mutate(marital2=fct_recode(marital,
"NA" = "No answer",
"Single" = "Never married"
)) %>%
count(marital,marital2) %>%
mutate(prop=n/sum(n))
print(Marriage2)
Marriage2 = Social %>%
mutate(marital2=fct_recode(marital,
"Unknown" = "No answer",
"Single" = "Never married"
)) %>%
count(marital,marital2) %>%
mutate(prop=n/sum(n))
print(Marriage2)
Marriage2 = Social %>%
mutate(marital2=fct_recode(marital,
"Unknown" = "No answer",
"Single" = "Never married"
)) %>%
count(marital,marital2) %>%
mutate(prop=n/sum(n))
print(Marriage2)
level(Social$marital)
levels(Social$marital)
levels(Social$marital)
Marriage3 = Social %>%
mutate(marital2=fct_collapse(marital,
Alone = levels(marital)[c(2,4,5)],
Together = levels(marital)[c(6)],
Confused = levels(marital)[c(1,3)]
)) %>%
group_by(marital,marital2) %>%
summarize(n=n())
print(Marriage3)
Marriage4 = Social %>%
mutate(marital2=fct_lump(marital)) %>%
group_by(marital,marital2) %>%
summarize(n=n()) %>%
ungroup() %>%
mutate(prop=n/sum(n))
print(Marriage4)
Marriage4 = Social %>%
mutate(marital2=fct_lump(marital)) %>%
count(marital,marital2) %>%
mutate(prop=n/sum(n))
print(Marriage4)
Marriage5 = Social %>%
mutate(marital2=fct_lump(marital)) %>%
count(marital,marital2) %>%
mutate(prop=n/sum(n))
print(Marriage5)
Marriage5 = Social %>%
mutate(marital2=fct_lump(marital,2)) %>%
count(marital,marital2) %>%
mutate(prop=n/sum(n))
print(Marriage5)
